a. What is Django and what is its main purpose?
Ans : Django is a free and open-source web framework built with Python. It helps developers create complex web applications quickly and efficiently.
Django is a toolbox with pre-built components for common web development tasks like user authentication, database connections, and handling web requests. It saves you time by providing these features out of the box, so you can focus on the unique aspects of your application. Django handles a lot of the repetitive tasks involved in web development, like managing databases, handling user authentication, and generating HTML pages.

b. What is the difference between a view and a template in Django? 
Answer : Short answer, templates are primarily concerned with presentation and layout, whereas views are concerned with data handling and business logic. . In Django, a view is like a function or a class that takes a request from a web browser, processes it, and decides what information to send back. It's the logic behind what happens when you visit a webpage. Views interact with the database to fetch or store data, and then pass that data to a template. A template is an HTML file with special syntax that allows it to display dynamic data. It's like a blueprint for how a webpage should look, but it can also include placeholders for information that will change based on the data passed to it by the view. So, views handle the behind-the-scenes work, while templates handle the visual presentation of the website.

c. What is a model in Django and how is it used?
Answer : A model in Django is like a Python class that represents a table in a database. It defines the structure of the data that will be stored in that table, including what types of information each piece of data can be (like text, numbers, or dates). Models also define relationships between different pieces of data, like a blog post and its author. When you create a model, Django automatically generates the necessary SQL code to create the corresponding table in the database. Models are used to interact with the database: they allow you to create, read, update, and delete data without having to write SQL queries yourself. So, models provide an easy way to work with data in a web application.